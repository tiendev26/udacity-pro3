apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: udagram-api-feed
  name: udagram-api-feed
spec:
  replicas: 2
  selector:
    matchLabels:
      app: udagram-api-feed
  template:
    metadata:
      labels:
        app: udagram-api-feed
    spec:
      containers:
      - image: 49shine/udagram-api-feed:v1
        name: udagram-api-feed
        imagePullPolicy: Always
        resources:
          requests:
            memory: "1024Mi"
          limits:
            memory: "2046Mi"
        env:
          - name: URL
            valueFrom:
              configMapKeyRef:
                name: env-config
                key: URL
          - name: AWS_BUCKET
            valueFrom:
              configMapKeyRef:
                name: env-config
                key: AWS_BUCKET
          - name: AWS_PROFILE
            valueFrom:
              configMapKeyRef:
                name: env-config
                key: AWS_PROFILE
          - name: AWS_REGION
            valueFrom:
              configMapKeyRef:
                name: env-config
                key: AWS_REGION
          - name: JWT_SECRET
            valueFrom:
              configMapKeyRef:
                name: env-config
                key: JWT_SECRET
          - name: POSTGRES_DATABASE
            valueFrom:
              configMapKeyRef:
                name: env-config
                key: POSTGRES_DATABASE
          - name: POSTGRES_HOST
            valueFrom:
              configMapKeyRef:
                name: env-config
                key: POSTGRES_HOST
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: env-secret
                key: POSTGRES_PASSWORD
          - name: POSTGRES_USERNAME
            valueFrom:
              secretKeyRef:
                name: env-secret
                key: POSTGRES_USERNAME
        volumeMounts:
          - name: aws-secret
            mountPath: "/root/.aws/"
            readOnly: true
        ports:
        - containerPort: 8080
      restartPolicy: Always
      volumes:
        - name: aws-secret
          secret:
            secretName: aws-secret
